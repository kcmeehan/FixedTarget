<?xml version="1.0" encoding="utf-8" ?>

<!-- 
   This is an example scheduler script showing how run RunStDataCollectionMaker.C and 
   make the DavisDSTs.

   Be sure to change all the paths to somwhere to the relevant directories for you.
-->

<job maxFilesPerProcess="25" filesPerHour="20" simulateSubmission="true" fileListSyntax="xrootd">

  <!-- Set the location of the log files -->
  <stdout URL="file:/star/data05/scratch/cflores/DavisDSTs/AuAl_3_0/logs/DataExtract_$JOBINDEX.out" />
  <stderr URL="file:/star/data05/scratch/cflores/DavisDSTs/AuAl_3_0/logs/DataExtract_$JOBINDEX.err" />

  <!-- Set the location where the scheduler should dump all of its files -->
  <Generator><Location>
      /star/data05/scratch/cflores/DavisDSTs/AuAl_3_0/sched/
  </Location></Generator>

  <!-- Tell the scheduler what data files you would like to run over -->
  <input URL="catalog:star.bnl.gov?filetype=daq_reco_MuDst,trgsetupname=AuAu7_production,production=P10ih,filename~physics,sanity=1,tpx=1 -distinct" nFiles="all"  />

  <!-- Since your job can be run on any node at RCF its better to move your code to the node.
       This creates a zip file containing the macro and source code that will be run. -->
  <SandBox installer="ZIP">
    <Package name="sched">
      <File>file:/star/u/cflores/StDataCollector/RunStDataCollectorMaker.C</File>
      <File>file:/star/u/cflores/StDataCollector/StRoot/</File>
    </Package>
  </SandBox>

  <!-- Tell the scheduler what commands you would like to execute -->
  <command>
  
    <!-- If you want to run in a particulear library version you can do something like -->
    starver SL15e 
    
    <!-- Compile the code -->
    cons

    <!-- If you want to set some basic vertex cuts you can do something like -->
    <!-- In this case the cuts are designed to select beampipe events with the 
	 beampipe installed in 2010/2011. -->
    <!-- Change these to cuts that make sense for your analysis. If you don't want
	 to cut on a particular value set it to -999. If the value for a cut is -999
	 no cut will be applied. -->
    <!-- These cuts can be useful to keep the file size of your DavisDST down -->
    <!-- NOTE: If the beam spot quantities are set to something other -999 the 
	 radial vertex location will be computed with respect to the beam spot,
	 otherwise the radial vertex is computed from (0,0) -->
    set minVr = 2            <!-- Minimum Radial Vertex Position in cm -->
    set maxVr = 5            <!-- Maximum Raidal Vertex Position in cm -->
    set minVz = -200         <!-- Minimum Z Vertex Position in cm -->
    set maxVz = -150         <!-- Maximum Z Vertex Position in cm -->
    set minVx = -999         <!-- Minimum X Vertex Position in cm -->
    set maxVx = -999         <!-- Maximum X Vertex Position in cm -->
    set minVy = -999         <!-- Minimum Y Vertex Position in cm -->
    set maxVy = -999         <!-- Maximum Y Vertex Position in cm -->
    set beamSpotX = -999     <!-- The X location of the beam spot -->
    set beamSpotY = -999     <!-- The Y location of the beam spot -->
    set minPrimaryTracks = 2 <!-- Minimum number of primary tracks a primary vertex must have -->
    set maxVertices = -999   <!-- Maximum number of primary vertices to be stored for each evet -->
 
    <!-- Run the Root Macro with the options above -->
    set nEvents = 999999     <!-- Number of events to run over. -->
    root4star -q -b RunStDataCollectorMaker.C\($nEvents,\"$FILELIST\",\"$SCRATCH/\",\"$JOBID\",$minVr,$maxVr,$minVz,$maxVz,$minVx,$maxVx,$minVy,$maxVy,$beamSpotX,$beamSpotY,$minPrimaryTracks,$maxVertices\)


    <!-- NOTE: You can also elect to not cut on any variable by not setting any of them at all.
	 In that case your call to ROOT would look like 
	 root4star -q -b RunStDataCollectorMaker.C\(999999,\"$INPUTFILE0\",\"$SCRATCH/\",\"$JOBID\"\)
      -->
 
  </command>
  
  <output fromScratch="*.root" toURL="file:/star/data05/scratch/cflores/DavisDSTs/AuAl_3_0/data/"/>
  
</job>
